#!/usr/bin/python3


import deaddropdata
import argparse
import configparser

# TODO: store the path and name of the block in a config file
# TODO: check out ConfigParser: http://docs.python.org/2/library/configparser.html
config = configparser.ConfigParser()
config.read('deaddrop.ini')


block = config['Options']['EncryptedBlock']
database = config['Options']['Database']
datahandler = deaddropdata.deaddropdata(database)

def getsize(filename):
	#finds the size of a file
	s = open(filename, 'r+b')
	s.seek(0,2)
	bytesize = s.tell()
	return bytesize
	s.close()

def writefile(filename, offset):
	#writes a file to the block
	e = open(block, 'r+b')
	f = open(filename, 'r+b')
	e.seek(offset)
	e.write(f.read())
	size = getsize(filename)
	f.close()
	e.close()

def retrievefile(filename, offset, size):
	#retrieves a file from the block
	e = open(block, 'r+b')
	f = open(filename, 'w+b')
	e.seek(offset)
	f.write(e.read(size))
	f.close()
	e.close()
	
###############################################	
#Argparse stuff

parser = argparse.ArgumentParser()
group = parser.add_mutually_exclusive_group()
group.add_argument('-r', '--retrieve', help='retrieve a file from the encrypted block', action='store_true')
group.add_argument('-w', '--write', help='write a file to the encrypted block', action='store_true')
parser.add_argument('filename', help='choose the name of the file to write to or from', type=str)
parser.add_argument('offset', nargs='?', help='specify the offset in the block if retrieving', type=int)
args = parser.parse_args()

##############################################
if args.write:
	filename = args.filename
	offset = datahandler.getlastvalues()[1] + datahandler.getlastvalues()[2]
	writefile(filename,offset)
	datahandler.givevalues(offset, getsize(filename))
	print('The offset is ' + str(offset))

elif args.retrieve:
	filename = args.filename
	offset = args.offset
	size = datahandler.findvalues(offset)
	retrievefile(filename,offset,size)

print('Done')
